syntax = "proto3";
option csharp_namespace = "RurouniJones.DCScribe.Grpc";

package dcs;

/**
 * The category the object belongs to
 *
 * All DCS objects are one of the following categories. DCS itself does not use the UNKNOWN enum value but we use it
 * in GRPC as a fallback in case of issues determining the category.
 *
 * See https://wiki.hoggitworld.com/view/DCS_Class_Object for more information
 */
enum ObjectCategory {
  UNKNOWN = 0;
  UNIT = 1;
  WEAPON = 2;
  STATIC = 3;
  SCENERY = 4;
  BASE = 5;
  CARGO = 6;
}

/**
 * The category the object belongs to
 *
 * Some of these are less than obvious. For example an oilrig counts as a HELIPAD airfield.
 */
enum AirbaseCategory {
  AIRDROME = 0;
  HELIPAD = 1;
  SHIP = 2;
}

/**
 * Coalitions in DCS
 *
 * The coalitions supported by DCS. The NEUTRAL coalition is a relatively new one and may not be as supported as 
 * the belligerant ones.
 */
enum Coalition {
  NEUTRAL = 0;
  RED = 1;
  BLUE = 2;
}

message EmptyResponse {}

/**
 * Position of an object in DCS
 *
 * Lattitude and Longitude are in Decimal format (e.g. 41.33 / 37.21). Negative values are used for West of the
 * meridian and south of the equator
 *
 * Altitude is given in meters above Mean Sea Level (MSL) and can be a decimal value.
 */
message Position {
  double lat = 1;
  double lon = 2;
  double alt = 3; // in meters
}

/**
 * This type is returned if an object category cannot be determined
 *
 * The base object includes the `getName()` function so even for an unknown type we _should_ be able to get the name
 */
message Unknown {
  string name = 1;
}

/**
 * An instance of a DCS Unit
 *
 * A unit is an "active" unit in a DCS mission. This means it has an attached AI that moves and shoots. Units include
 * aircraft, ground units, ships, weapons etc.
 */
message Unit {
  uint32 id = 1; // The DCS generated ID
  string name = 2; // The name of the unit as assigned in the mission editor
  string callsign = 3; // The DCS assigned callsign if one exists. e.g. "Enfield 11"
  Coalition coalition = 4; // The coalition the unit belongs to
  string type = 5; // The DCS type-name of the unit. e.g "MiG-29A", "ZSU_57_2" or "Hawk ln"
  Position position = 6; // The position of the unit
  optional string player_name = 7; // The name of the player if one is in control of the unit
  string group_name = 8; // The name of the group that the unit belongs to
  uint32 number_in_group = 9; // The number of this unit in the group. Does not change as units are destroyed
  double speed = 10; // The horizontal speed of the unit. If it is doing mach one straight up then the speed will be 0
  double heading = 11; // The heading of the unit
}

/**
 * An instance of a DCS group
 */
message Group {
  uint32 id = 1; // The DCS generated ID
  string name = 2; // The name of the group as assigned in the mission editor
}

/**
 * An instance of a DCS weapon
 *
 * These weapons include everything from autocannon HE shells up to massive ship-killer missiles
 */
message Weapon {
	uint32 id = 1; // The DCS generated ID
	string type = 2; // The DCS type-name of the weapon. e.g "Matra_S530D", "HAWK_RAKETA" or "weapons.shells.53-UOR-281U"
	Position position = 3;  // The position of the Weapon
}

message Static {
}

message Scenery {
}

/**
 * An instance of a DCS Airfield
 *
 */
message Airbase {
  optional uint32 id = 1; // The DCS generated ID. Only used when the airfield is also a unit (e.g. an Aicraft Carrier)
  string name = 2; // TODO: Fill this in
  string callsign = 3; // TODO: Fill this in
  Coalition coalition = 4; // The coalition the unit belongs to. This can change mid-mission if an airfield is captured
  Position position = 6; // The position of the center point of the airfield.
  AirbaseCategory category = 7; // What category the airfield belongs to.
  string display_name = 8; // TODO: Fill this in
}

message Cargo {
}

message Initiator {
	oneof initiator {
		Unknown unknown = 1;
		Unit unit = 2;
		Weapon weapon = 3;
		Static static = 4;
		Scenery scenery = 5;
		Airbase airbase = 6;
		Cargo cargo = 7;
	}
}

message Target {
  oneof target {
    Unknown unknown = 1;
    Unit unit = 2;
    Weapon weapon = 3;
    Static static = 4;
    Scenery scenery = 5;
    Airbase airbase = 6;
    Cargo cargo = 7;
  }
}

// End of Object subtypes

message MarkPanel {
	uint32 id = 1; 
	double time = 2; // I have no idea what this time value means
	Unit initiator = 3;
	optional Coalition coalition = 4;
	optional uint32 group_id = 5;
	optional string text = 6;
	Position position = 7;
}
